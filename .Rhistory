des = c()
no = c()
for(i in 1:length(UniqueDes)) {
for(j in 1:length(Designation)){
if(UniqueDes[i]==Designation[j]){
count = count+1
}
}
des = append(des,UniqueDes[i])
no = append(no,count)
count = 0
}
des
no
countEmpolyees = data.frame("Designation"=UniqueDes,"Count"=no)
countEmpolyees
Name=c('ravi','raju','ramu','seetha','geetha')
Gender=c("M","M","M","F","F")
UniqueGen = Gender[!duplicated(Gender)]
UniqueGen
theDF = data.frame(Name,Gender)
theDF
no = c()
for(i in 1:length(UniqueGen)) {
for(j in 1:length(Gender)){
if(UniqueGen[i]==Gender[j]){
count = count+1
}
}
no = append(no,count)
count = 0
}
no
theDF2 = data.frame(UniqueGen,no)
theDF2
Name=c('ravi','raju','ramu','seetha','geetha','rahul','kumar')
Age=c(23,22,25,26,32,28,25)
Designation=c("SDE-1","Manager","SDE-2","CEO","Team Leader","SDE-1","SDE-1")
UniqueDes = Designation[!duplicated(Designation)]
UniqueDes
name = c(' Mounav ', ' Rizwan ', ' Ajay ', ' Charan ', ' Vamsi ', ' M.sai ')
age  = c(19, 19, 20, 30, 18, 20)
desig = c(' Manager ', ' webprogramer ', ' cyber-manager ', ' Manager ', ' webprogrmer ', ' Boss ')
df = data.frame(Employee = name, Age = age, Designation = desig)
df
unique(desig)
# Create a data frame that stores the name, age, designation of the employee.
# Find how  many employees are working in each designation?
name = c(' Mounav ', ' Rizwan ', ' Ajay ', ' Charan ', ' Vamsi ', ' M.sai ')
age  = c(19, 19, 20, 30, 18, 20)
desig = c(' Manager ', ' webprogramer ', ' cyber-manager ', ' Manager ', ' webprogramer ', ' Boss ')
df = data.frame(Employee = name, Age = age, Designation = desig)
df
unique(desig)
Employees = data.frame(Name,Age,Designation)
Employees
des = c()
no = c()
for(i in 1:length(UniqueDes))
{
for(j in 1:length(Designation))
{
if(UniqueDes[i]==Designation[j])
{
count = count+1
}
}
des = append(des,UniqueDes[i])
no = append(no,count)
count = 0
}
des
no
des = c()
no = c()
for(i in 1:length(UniqueDes))
{
count = 0
for(j in 1:length(Designation))
{
if(UniqueDes[i]==Designation[j])
{
count = count+1
}
}
des = append(des,UniqueDes[i])
no = append(no,count)
}
des
no
# Create a data frame that stores the name, age, designation of the employee.
# Find how  many employees are working in each designation?
name = c(' Mounav ', ' Rizwan ', ' Ajay ', ' Charan ', ' Vamsi ', ' M.sai ')
age  = c(19, 19, 20, 30, 18, 20)
desig = c(' Manager ', ' webprogramer ', ' cyber-manager ', ' Manager ', ' webprogramer ', ' Boss ')
df = data.frame(Employee = name, Age = age, Designation = desig)
df
ind = unique(desig)
des = c()
no = c()
for(i in 1 : length(ind))
{
count = 0
for(j in 1 : length(desig))
{
if(ind[i] == desig[j])
{
count = count + 1
}
}
des = append(des,ind[i])
no = append(no,count)
}
des
no
result = data.frame("Designation" = ind, "Count" = no)
result
name1  <-  c('sai','geetha','ajay','Madhu','vamsi','Parveen')
gender  <- c('male','female','male','female','male','female')
mc = sum(gender == 'male')
fc = sum(gender == 'female')
print("No.of male employess : ")
mc
print("No.of female employess : ")
fc
? '+'
x = 10:1
y = -4:5
q = c("Hockey","Football","Baseball","Curling","Rugby","Lacrosse","Basketball","Tennis","Cricket","Soccer")
theDF = data.frame(x,y,q)
theDF
theDF <- data.frame(First = x, Second = y, Third = q)
theDF
nrow(theDF)
ncol(theDF)
dim(theDF)
names(theDF)
names(theDF)[3] # 3rd column name
names(theDF)[3]
rownames(theDF)
rownames(theDF) = c("One","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten")
rownames(theDF)
rownames(theDF) <- NULL
rownames(theDF)
rownames(theDF) <- Na
rownames(theDF)
rownames(theDF) <- NA
rownames(theDF)
rownames(theDF) <- NULL
rownames(theDF)
head(theDF)
head(theDF, n = 8)
tail(theDF)
tail(theDF, n = 2)
class(theDF)
theDF$Third
theDF$Sport
theDF[3,2]
theDF[3,2:3]
theDF[c(3,5),2]
theDF[c(3,8),2]
theDF[c(3,5),2:3]
theDF[,3]
theDF[,2:3]
theDF[2,]
theDF[2:4,]
theDF[, c("First","Sport")]
theDF[, c("First","Third")]
theDF[, "Third"]
class(theDF[, "Third"])
class(theDF["Third"])
theDF[, "Third", drop = FALSE]
theDF[, 3, drop = FALSE]
list(1,2,3)
list(c(1,2,3))
list3 <- list(c(1,2,3),3:7)
list3
x = 10:1
y = -4:5
q = c("Hockey","Football","Baseball","Curling","Rugby","Lacrosse","Basketball","Tennis","Cricket","Soccer")
theDF = data.frame(x,y,q)
theDF
list(theDF, 1:10)
list5 = list(theDF, 1:10, list3)
list5
names(list5)
names(list5) = c("data.frame","vector","list")
names(list5)
list5
list6 = list(TheDataFrame = theDF, TheVector = 1:10, TheList = list3)
names(list6)
list6
emptyList = vector(mode = "list", length = 4)
emptyList
list5[[1]]
list5[["data.frame"]]
list5[[1]]$Third
list5[[1]]$Sport
list5[[1]]$q
list5[[1]][, "y"]
list5[[1]][, "y", drop = FALSE]
length(list5)
list5[[4]] <- 2
length(list5)
# Lists Datatype
list(1,2,3)
list(c(1,2,3))
list3 <- list(c(1,2,3),3:7)
list3
x = 10:1
y = -4:5
q = c("Hockey","Football","Baseball","Curling","Rugby","Lacrosse","Basketball","Tennis","Cricket","Soccer")
theDF = data.frame(x,y,q)
theDF
list(theDF, 1:10)
list5 = list(theDF, 1:10, list3)
list5
names(list5)
names(list5) = c("data.frame","vector","list")
names(list5)
list5
list6 = list(TheDataFrame = theDF, TheVector = 1:10, TheList = list3)
names(list6)
list6
# Empty list creation
emptyList = vector(mode = "list", length = 4)
emptyList
#Accessing
list5[[1]]
list5[["data.frame"]]
list5[[1]]$q
list5[[1]][, "y"]
list5[[1]][, "y", drop = FALSE]
length(list5)
list5[[4]] <- 2
length(list5)
list5[["Newelement"]] <- 3:6
length(list5)
names(list5)
list5
install.packages("RMySQL")
library(RMySQL)
mydb = dbConnect(MySQL(), user='root', password='', dbname='student', host='localhost')
mydb
dbListTables(mydb)
dbListFields(mydb, 'ddl_student')
rs = dbSendQuery(mydb, "select * from emp")
rs
data = fetch(rs, n=-1)
data
mydb = dbConnect(MySQL(), user='root', password='', dbname='student', host='localhost')
mydb
dbListTables(mydb)
dbListFields(mydb, 'ddl_student')
rs = dbSendQuery(mydb, "select * from ddl_student")
rs
data = fetch(rs, n=-1)
data
num = c(1,2,3,4,5,6,7,8,9,10)
ans = matrix(num, nrow = 5)
ans
vect = c(1,2,3,4,5,6,7,8,9)
ans2 = matrix(vect, nrow = 3)
ans2
rownames(ans2)
colnames(ans2)
rownames(ans2) = c("First","Second","Third")
colnames(ans2) = c("col1","col2","col3")
rownames(ans2)
colnames(ans2)
ans2
vect3 = c(9,8,7,6,5,4,3,2,1)
ans3 = matrix(vect3, nrow = 3)
ans3
res = ans3[c(2),c(3)]
res
arth = matrix(c(1,2,3,4,5,6), nrow = 2, ncol = 3)
arth
arth2 = matrix(c(7,8,9,10,11,12), nrow = 2, ncol = 3)
arth2
arth3 = t(arth2)
arth3
add = arth + arth2
add
sub = arth - arth2
sub
mul = arth * arth2
mul
div = arth / arth2
div
rname = c("r1","r2","r3","r4")
cname = c("c1","c2","c3","c4")
vect5 = matrix(1:16, nrow = 4, byrow = TRUE, dimnames = list(rname,cname))
vect5
vect5[vect5[,3] > 7,]
x = matrix(1:12, ncol=3)
x
l =  split(x, rep(1:ncol(x), each = nrow(x)))
l
mat7 = matrix(1:20, nrow = 4)
mat7
a = max(mat7)
b = min(mat7)
which(mat7 == a,arr.ind = TRUE)
which(mat7 == b, arr.ind = TRUE)
mydb = dbConnect(MySQL(), user='root', password='', dbname='student', host='localhost')
mydb
dbListTables(mydb)
dbListFields(mydb, 'ddl_student')
rs = dbSendQuery(mydb, "select * from ddl_student")
rs
data = fetch(rs, n=-1)
data
getwd()
setwd("E:/venkat sai/rstudio_language") # it will set the new directory location
getwd() # it will return the present location of working directory.
cdata <- read.csv("company.csv")
cdata
# Analyzing the CSV file
is.data.frame(cdata)
ncol(cdata)
nrow(cdata)
# getting the maximum salary from the csv file
sal <- max(cdata$salary)
sal
# getting the person details from the max salary
psal <- subset(cdata, salary == max(salary))
psal
temp = subset(cdata, dept == "IT")
temp
# Employess less than 600 in IT department
lesit = subset(cdata, salary < 600 & dept == "IT")
lesit
# Employess joined After 2014 Year
afyear = subset(cdata, as.Date(start_date) > as.Date("2014-01-01"))
afyear
# Writing into CSV file
write.csv(afyear,"output.csv")
read.csv("output.csv")
getwd()
setwd("E:/venkat sai/rstudio_language")
getwd()
read_excel("product_list.xlsx")
# writing into an excel file
install.packages("writexl")
library("writexl")
x = 10:1
y = -4:5
q = c("Hockey","Football","Baseball","Curling","Rugby","Lacrosse","Basketball","Tennis","Cricket","Soccer")
theDF = data.frame(x,y,q)
theDF
write_xlsx(theDF,"sports.xlsx")
read_excel("product_list.xlsx")
install.packages("readxl")
library("readxl")
getwd()
setwd("E:/venkat sai/rstudio_language")
getwd()
read_excel("product_list.xlsx")
x = 10:1
y = -4:5
q = c("Hockey","Football","Baseball","Curling","Rugby","Lacrosse","Basketball","Tennis","Cricket","Soccer")
theDF = data.frame(x,y,q)
theDF
write_xlsx(theDF,"sports.xlsx")
require("plyr")
library("plyr")
install.packages("data.table")
require("data.table")
library("data.table")
install.packages("reshape2")
require("reshape2")
library("reshape2")
install.packages("reshape2")
install.packages("reshape2")
require("reshape2")
library("reshape2")
sport <- c("Hockey", "Baseball", "Football")
league <- c("NHL", "MLB", "NFL")
trophy <- c("Stanley Cup", "Commissionerâ€™s Trophy", "Vince Lombardi Trophy")
trophies1 <- cbind(sport,league,trophy) # vectors will become as columns
trophies0 <- rbind(sport,league,trophy) # vectors become  as rows
trophies0
trophies1
class(trophies1)
trophies2<- data.frame(sport=c("Basketball", "Golf"), league=c("NBA", "PGA"),
trophy=c("Larry Championship Trophy", "Wanamaker Trophy"), stringsAsFactors=FALSE)
trophies2
trophies <- rbind(trophies1, trophies2)
trophies
getwd()
setwd(choose.dir())
getwd()
df1 = data.frame(StudentId = c(101:106),
Product = c("Hindi", "English",
"Maths", "Science",
"Political Science",
"Physics"))
df1
df2 = data.frame(StudentId = c(102, 104, 106,
107, 108),
State = c("Manglore", "Mysore",
"Pune", "Dehradun", "Delhi"))
df2
df = merge(x = df1, y = df2, by = "StudentId")
df
# left outer
df3 = merge(x = df1, y = df2, by = "StudentId",
all.x = TRUE)
df3
# right outer
df4 = merge(x = df1, y = df2, by = "StudentId",
all.y = TRUE)
df4
# full join
df5 = merge(x = df1, y = df2, by = "StudentId",
all = TRUE)
df5
# cross join
df6 = merge(x = df1, y = df2, by = NULL)
df6
install.packages("dplyr")
library(dplyr)
df7 = df1 %>% semi_join(df2, by = "StudentId")
df7
# anti join (doubt topic)
df8 = df1 %>% anti_join(df2, by = "StudentId")
df8
install.packages("MASS")
install.packages("reshape")
library("MASS")
library("reshape")
library("reshape2")
ships
sd = (head(ships, n = 10)) # taking as data frame
class(sd)
molten_ships = melt(sd, id = c("type","year"))
molten_ships
rec <- dcast(molten_ships, type+year~variable,sum)
rec
exact_one = function(p)
{
notp = 1 - p
tot = 0.0
for(i in 1:length(p))
{
tot = tot + p[i] + prod(notp[-i])
}
return(tot)
}
v1 = c(1,2,3,4,5)
a1 = exact_one(v1)
a1
cumsum(v1)
cumprod(v1)
mat1 <- matrix(c(1,5,6,2,3,2), nrow = 3)
mat1
min(mat1[,1], mat1[,2])
pmin(mat1[,1], mat1[,2])
pmin(mat1[1,], mat1[2,], mat1[3,])
unsort = c(13,2,5,2,3)
sort(unsort)
unsort
order(unsort)
v2 = c('def', 'ab', 'zzzz')
v3 = c(2,5,1)
y = data.frame(v1 = v2, v2 = v3)
y
r <- order(y$v2)
r
z <- y[r,]
z
rank(v3)
rank(v1)
crossprod(1:3,c(5,12,13))
a = matrix(1:4, ncol = 2, byrow = TRUE)
a
b = matrix(c(1,0,-1,1), nrow = 2)
b
mat_mul = a %*% b
mat_mul
s1 = matrix(c(1,1,-1,1), nrow = 2, ncol = 2)
s2 = c(2,4)
solve(s1,s2)
solve(s1)
q1 = matrix(1:9, nrow = 3, byrow = TRUE)
q1
t(q1)
det(q1)
eigen(q1)
p <- c(1,2,5)
q <- c(5,1,8,9)
union(p,q)
intersect(p,q)
setdiff(p,q)
setdiff(q,p)
setequal(p,q)
setequal(p, c(1,2,5))
5 %in% p
10 %in% q
choose(5,3)
symetric = function(a,b)
{
sx = setdiff(a,b)
sy = setdiff(b,a)
result = union(sx,sy)
return(result)
}
f = c(1,2,5)
g = c(5,1,8,9)
ans = symetric(f,g)
ans
